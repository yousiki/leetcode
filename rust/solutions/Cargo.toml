[package]
name = "solutions"
authors.workspace = true
edition.workspace = true
license.workspace = true

[[test]]
name = "build_an_array_with_stack_operations"
path = "build_an_array_with_stack_operations.rs"

[[test]]
name = "check_if_any_element_has_prime_frequency"
path = "check_if_any_element_has_prime_frequency.rs"

[[test]]
name = "container_with_most_water"
path = "container_with_most_water.rs"

[[test]]
name = "count_prime_gap_balanced_subarrays"
path = "count_prime_gap_balanced_subarrays.rs"

[[test]]
name = "count_special_triplets"
path = "count_special_triplets.rs"

[[test]]
name = "divide_a_string_into_groups_of_size_k"
path = "divide_a_string_into_groups_of_size_k.rs"

[[test]]
name = "find_all_k_distant_indices_in_an_array"
path = "find_all_k_distant_indices_in_an_array.rs"

[[test]]
name = "find_maximum_area_of_a_triangle"
path = "find_maximum_area_of_a_triangle.rs"

[[test]]
name = "find_triangular_sum_of_an_array"
path = "find_triangular_sum_of_an_array.rs"

[[test]]
name = "find_weighted_median_node_in_tree"
path = "find_weighted_median_node_in_tree.rs"

[[test]]
name = "generate_tag_for_video_caption"
path = "generate_tag_for_video_caption.rs"

[[test]]
name = "inverse_coin_change"
path = "inverse_coin_change.rs"

[[test]]
name = "largest_triangle_area"
path = "largest_triangle_area.rs"

[[test]]
name = "longest_binary_subsequence_less_than_or_equal_to_k"
path = "longest_binary_subsequence_less_than_or_equal_to_k.rs"

[[test]]
name = "max_difference_you_can_get_from_changing_an_integer"
path = "max_difference_you_can_get_from_changing_an_integer.rs"

[[test]]
name = "maximum_difference_between_increasing_elements"
path = "maximum_difference_between_increasing_elements.rs"

[[test]]
name = "maximum_product_of_first_and_last_elements_of_a_subsequence"
path = "maximum_product_of_first_and_last_elements_of_a_subsequence.rs"

[[test]]
name = "maximum_tastiness_of_candy_basket"
path = "maximum_tastiness_of_candy_basket.rs"

[[test]]
name = "minimize_the_maximum_difference_of_pairs"
path = "minimize_the_maximum_difference_of_pairs.rs"

[[test]]
name = "minimum_adjacent_swaps_to_alternate_parity"
path = "minimum_adjacent_swaps_to_alternate_parity.rs"

[[test]]
name = "minimum_deletions_to_make_string_k_special"
path = "minimum_deletions_to_make_string_k_special.rs"

[[test]]
name = "minimum_increments_to_equalize_leaf_paths"
path = "minimum_increments_to_equalize_leaf_paths.rs"

[[test]]
name = "minimum_score_triangulation_of_polygon"
path = "minimum_score_triangulation_of_polygon.rs"

[[test]]
name = "minimum_steps_to_convert_string_with_operations"
path = "minimum_steps_to_convert_string_with_operations.rs"

[[test]]
name = "pacific_atlantic_water_flow"
path = "pacific_atlantic_water_flow.rs"

[[test]]
name = "split_array_into_fibonacci_sequence"
path = "split_array_into_fibonacci_sequence.rs"

[[test]]
name = "squares_of_a_sorted_array"
path = "squares_of_a_sorted_array.rs"

[[test]]
name = "subarray_sum_equals_k"
path = "subarray_sum_equals_k.rs"

[[test]]
name = "sum_of_k_mirror_numbers"
path = "sum_of_k_mirror_numbers.rs"

[[test]]
name = "swim_in_rising_water"
path = "swim_in_rising_water.rs"

[[test]]
name = "trapping_rain_water_ii"
path = "trapping_rain_water_ii.rs"

[[test]]
name = "triangle"
path = "triangle.rs"

[[test]]
name = "two_sum"
path = "two_sum.rs"

[[test]]
name = "valid_triangle_number"
path = "valid_triangle_number.rs"

[[test]]
name = "water_bottles"
path = "water_bottles.rs"

[[test]]
name = "water_bottles_ii"
path = "water_bottles_ii.rs"
